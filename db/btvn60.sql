CREATE TABLE "student" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   "name" varchar(50) NOT NULL,
   "created_at" timestamptz DEFAULT (now()),
   "updated_at" timestamptz DEFAULT (now())
);

CREATE TABLE "subject" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   "name" varchar(255) NOT NULL,
   "created_at" timestamptz DEFAULT (now()),
   "updated_at" timestamptz DEFAULT (now())
);

CREATE TABLE "subject_student" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   "subject_id" int,
   "student_id" int,
   "created_at" timestamptz DEFAULT (now()),
   "updated_at" timestamptz DEFAULT (now())
);

CREATE TABLE "exam" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "subject_id" int,
    "created_at" timestamptz DEFAULT (now()),
    "updated_at" timestamptz DEFAULT (now())
);

CREATE TABLE "question" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "question" varchar(255),
    "correct_answer" varchar(255),
    "exam_id" int,
    "created_at" timestamptz DEFAULT (now()),
    "updated_at" timestamptz DEFAULT (now())
);

CREATE TABLE "exam_result" (
   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   "student_id" int,
   "question_id" int,
   "is_correct" boolean
);

ALTER TABLE "subject_student" ADD FOREIGN KEY ("student_id") REFERENCES "student" ("id");

ALTER TABLE "subject_student" ADD FOREIGN KEY ("subject_id") REFERENCES "subject" ("id");

ALTER TABLE "exam" ADD FOREIGN KEY ("subject_id") REFERENCES "subject" ("id");

ALTER TABLE "question" ADD FOREIGN KEY ("exam_id") REFERENCES "exam" ("id");

ALTER TABLE "exam_result" ADD FOREIGN KEY ("student_id") REFERENCES "student" ("id");

ALTER TABLE "exam_result" ADD FOREIGN KEY ("question_id") REFERENCES "question" ("id");

insert into student (name)
values ('Hoàn'), ('Nam'), ('Dương');

insert into subject (name)
values ('Toán'), ('Lý'), ('Hóa');

insert into subject_student (subject_id, student_id)
values (1, 2), (2, 2), (3, 1), (1, 1);

insert into exam (name, subject_id)
values ('Bài kiểm tra toán', 1), ('Bài kiểm tra lý', 2), ('Bài kiểm tra hóa', 3);

insert into question (question, correct_answer, exam_id)
values ('1 + 1 =', '3', 1), ('2 + 2 =', '4', 1), ('H2 + O2 ->', 'HOHO', 3), ('S/t = ', 'v', 2);

insert into exam_result (student_id, question_id, is_correct)
values (2, 1, true), (2, 1, true), (2, 4, false), (1, 2, true), (1, 3, true), (1, 1, false);

with
detail_results as (
    select
        question.id,
        question.exam_id,
        question.question,
        exam_result.student_id,
        exam_result.is_correct
    from question
    left join exam_result on exam_result.question_id = question.id
),

exam_results as (
    select
        exam.id,
        exam.subject_id,
        exam.name,
        subject_student.student_id,
        json_build_object(
            'total_correct', count(case when detail_results.is_correct then 1 end),
            'total_question', count(distinct detail_results.id),
            'details', json_agg(
                json_build_object(
                    'id', detail_results.id,
                    'question', detail_results.question,
                    'is_correct', detail_results.is_correct
                )
            )
        ) as result
    from exam
    join subject_student on subject_student.subject_id = exam.subject_id
    left join detail_results on detail_results.exam_id = exam.id
    and detail_results.student_id = subject_student.student_id
    group by exam.id, exam.name, exam.subject_id, subject_student.student_id
),

student_exams as (
    select
        student.id,
        student.name,
        subject.id as subject_id,
        json_agg(
            json_build_object(
                'id', exam_results.id,
                'name', exam_results.name,
                'result', exam_results.result
            )
        ) as exams
    from student
    inner join subject_student on subject_student.student_id = student.id
    inner join subject on subject.id = subject_student.subject_id
    left join exam_results on exam_results.subject_id = subject.id
    and exam_results.student_id = student.id
    group by student.id, student.name, subject.id
),

subject_students as (
    select
        subject.id,
        subject.name,
        json_agg(
            json_build_object(
                'id', student_exams.id,
                'name', student_exams.name,
                'exams', student_exams.exams
            )
        ) as students
    from subject
    left join student_exams on student_exams.subject_id = subject.id
    group by subject.id, subject.name
)

select json_agg(
   json_build_object(
       'id', subject_students.id,
       'name', subject_students.name,
       'students', subject_students.students
   )
)
from subject_students;